//{ Driver Code Starts
import java.io.*;

class Main {
    
	public static void main (String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
		while(t-->0){
		    //size of array
		    int n = Integer.parseInt(br.readLine().trim());
		    int arr[] = new int[n];
		    String inputLine[] = br.readLine().trim().split(" ");
		    
		    //adding elements
		    for(int i=0; i<n; i++){
		        arr[i] = Integer.parseInt(inputLine[i]);
		    }
		    
		    Solution obj = new Solution();
		    
		    //calling maxSubarraySum() function
		    System.out.println(obj.maxSubarraySum(arr, n));
		}
	}
}


// } Driver Code Ends


class Solution{

    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    long maxSubarraySum(int arr[], int n){
        int max1=arr[0],count=0;
        for(int j=0;j<n;j++){
            if(arr[j]<0){
                count++;
            }
            if(max1<arr[j]){
                max1=arr[j];
            }
        }
        long curr=0,max=0;
        for(int i=0;i<n;i++){
            curr+=arr[i];
            if(curr<0){
                curr=0;
            }
            else{
                if(curr>max){
                    max=curr;
                }
            }
        }
        if(count==n){
            return max1;
        }
        else{
            return max;
        }
    }
    
}

